{
    "sourceFile": "lib/screen/weather_home_screen.dart",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 0,
            "patches": [
                {
                    "date": 1636498814481,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                }
            ],
            "date": 1636498814481,
            "name": "Commit-0",
            "content": "import 'package:flutter/material.dart';\r\nimport 'package:get/get.dart';\r\nimport 'package:testing/constant/constant.dart';\r\nimport 'package:testing/controller/weather_controller.dart';\r\nimport 'package:testing/screen/weather_detail_screen.dart';\r\nimport 'package:testing/widget/temperatureminmax_widget.dart';\r\nimport 'package:testing/widget/weather_tile.dart';\r\nimport 'package:velocity_x/velocity_x.dart';\r\n\r\nclass WeatherScreen extends GetView<WeatherController> {\r\n  const WeatherScreen({Key? key}) : super(key: key);\r\n  @override\r\n  Widget build(BuildContext context) {\r\n    return GestureDetector(\r\n      onTap: () {\r\n        FocusScope.of(context).unfocus();\r\n      },\r\n      child: Scaffold(\r\n        resizeToAvoidBottomInset: false,\r\n        appBar: AppBar(\r\n          title: \"Weather App\".text.headline2(context).bold.make(),\r\n        ),\r\n        body: Column(\r\n          children: [\r\n            Row(\r\n              children: [\r\n                TextFormField(\r\n                  controller: controller.searchText,\r\n                  onFieldSubmitted: (value) {\r\n                    controller.text.value = value.toString().trim();\r\n                    if (controller.text.value.isNotEmpty) {\r\n                      controller.getCityData();\r\n                    }\r\n                  },\r\n                  decoration: const InputDecoration(\r\n                    hintText: \"Search here\",\r\n                    contentPadding: EdgeInsets.only(left: 20, bottom: 0),\r\n                    border: InputBorder.none,\r\n                  ),\r\n                )\r\n                    .card\r\n                    .roundedLg\r\n                    .elevation(4)\r\n                    .make()\r\n                    .marginOnly(right: 15, top: 15)\r\n                    .expand(),\r\n                GestureDetector(\r\n                    onTap: () {\r\n                      controller.getLocationWeather();\r\n                    },\r\n                    child: Image.asset(\r\n                      \"assets/location.png\",\r\n                      height: 40,\r\n                      width: 40,\r\n                      color: kSecondaryLightColor,\r\n                    ).marginOnly(top: 16)),\r\n              ],\r\n            ),\r\n            Expanded(\r\n              child: controller.obx(\r\n                (data) {\r\n                  final stores = controller.storeData;\r\n                  var s = stores!.weather!.single.icon;\r\n                  return Column(\r\n                    children: [\r\n                      const Spacer(),\r\n                      s!.isEmpty\r\n                          ? Image.network(\r\n                              \"http://openweathermap.org/img/wn/$s@2x.png\",\r\n                            )\r\n                          : const SizedBox.shrink(),\r\n                      Stack(\r\n                        clipBehavior: Clip.none,\r\n                        children: [\r\n                          (stores.main?.temp ?? 0)\r\n                              .toInt()\r\n                              .toString()\r\n                              .text\r\n                              .headline1(context)\r\n                              .make(),\r\n                          Positioned(\r\n                              right: -25,\r\n                              top: 5,\r\n                              child: \"o\".text.size(30).bold.make()),\r\n                        ],\r\n                      ),\r\n                      Row(\r\n                        mainAxisAlignment: MainAxisAlignment.center,\r\n                        children: [\r\n                          TemperatureMinMax(\r\n                            name: \"min\",\r\n                            temp: (stores.main?.tempMin ?? 0).toInt(),\r\n                          ),\r\n                          const SizedBox(\r\n                            width: 30,\r\n                          ),\r\n                          TemperatureMinMax(\r\n                            name: \"max\",\r\n                            temp: (stores.main?.tempMax ?? 0).toInt(),\r\n                          ),\r\n                        ],\r\n                      ),\r\n                      const SizedBox(\r\n                        height: 10,\r\n                      ),\r\n                      Wrap(\r\n                        children: [\r\n                          (stores.name.toString() +\r\n                                  ', ' +\r\n                                  stores.sys!.country.toString())\r\n                              .text\r\n                              .headline4(context)\r\n                              .make(),\r\n                        ],\r\n                      ),\r\n                      const Spacer(),\r\n                      WeatherTile(\r\n                        title: \"Wind Speed\",\r\n                        subtitle: (stores.wind?.speed ?? 0).toString() + \"km/h\",\r\n                      ),\r\n                      const SizedBox(\r\n                        height: 15,\r\n                      ),\r\n                      WeatherTile(\r\n                        title: \"Feels Like\",\r\n                        subtitle: (stores.main?.feelsLike ?? 0).toString(),\r\n                      ),\r\n                      ElevatedButton(\r\n                              key: const Key(\"ViewDetails\"),\r\n                              style: ButtonStyle(\r\n                                backgroundColor:\r\n                                    MaterialStateProperty.all<Color>(\r\n                                        kSecondaryLightColor),\r\n                              ),\r\n                              onPressed: () {\r\n                                Get.to(() => WeatherDetailScreen(\r\n                                      weatherData: stores,\r\n                                    ));\r\n                              },\r\n                              child: \"View Details\".text.make())\r\n                          .marginSymmetric(vertical: 15)\r\n                    ],\r\n                  );\r\n                },\r\n              ),\r\n            ),\r\n          ],\r\n        ).marginSymmetric(horizontal: 15),\r\n      ),\r\n    );\r\n  }\r\n}\r\n"
        }
    ]
}