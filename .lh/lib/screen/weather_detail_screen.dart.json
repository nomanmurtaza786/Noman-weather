{
    "sourceFile": "lib/screen/weather_detail_screen.dart",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 10,
            "patches": [
                {
                    "date": 1636414149383,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1636431232783,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -4,43 +4,53 @@\n import 'package:testing/model/weather_model.dart';\r\n import 'package:testing/widget/card_widget.dart';\r\n import 'package:velocity_x/velocity_x.dart';\r\n \r\n-class WeatherDetailScreen extends GetView<WeatherController>{\r\n-\r\n-  const WeatherDetailScreen({Key? key,this.weatherData}) : super(key: key);\r\n-  final WeatherCountryModel? weatherData;\r\n+class WeatherDetailScreen extends GetView<WeatherController> {\r\n+  const WeatherDetailScreen({Key? key, this.weatherData}) : super(key: key);\r\n+  final Weather? weatherData;\r\n   @override\r\n   Widget build(BuildContext context) {\r\n     return Scaffold(\r\n-      appBar: AppBar(title: \"Weather Detail\".text.black.make(),centerTitle: true,),\r\n-      body:  Column(\r\n-          children: [\r\n-\r\n-            GridView(\r\n-              padding: EdgeInsets.symmetric(horizontal: 15,vertical: 20),\r\n-              shrinkWrap: true,\r\n-              gridDelegate: const SliverGridDelegateWithFixedCrossAxisCount(\r\n-                crossAxisCount: 3,\r\n-                mainAxisSpacing: 15,\r\n-                crossAxisSpacing: 15,\r\n-                mainAxisExtent: 140.0,\r\n+      appBar: AppBar(\r\n+        title: \"Weather Detail\".text.black.make(),\r\n+        centerTitle: true,\r\n+      ),\r\n+      body: Column(\r\n+        children: [\r\n+          GridView(\r\n+            padding: EdgeInsets.symmetric(horizontal: 15, vertical: 20),\r\n+            shrinkWrap: true,\r\n+            gridDelegate: const SliverGridDelegateWithFixedCrossAxisCount(\r\n+              crossAxisCount: 3,\r\n+              mainAxisSpacing: 15,\r\n+              crossAxisSpacing: 15,\r\n+              mainAxisExtent: 140.0,\r\n+            ),\r\n+            children: [\r\n+              WeatherCard(\r\n+                title: \"Sunrise\",\r\n+                subtitle: weatherData!.sys!.sunrise!.toInt(),\r\n               ),\r\n-              children: [\r\n-                WeatherCard(title: \"Sunrise\", subtitle: weatherData!.sys!.sunrise!.toInt(),),\r\n-                WeatherCard(title: \"Sunset\", subtitle:  weatherData!.sys!.sunset!.toInt()),\r\n-                WeatherCard(title: \"See Level\", subtitle:  weatherData!.main!.seaLevel!.toInt()),\r\n-                WeatherCard(title: \"Grand Level\", subtitle:  weatherData!.main!.grndLevel!.toInt()),\r\n-                WeatherCard(title: \"Humidity\", subtitle:  weatherData!.main!.humidity!.toInt()),\r\n-                WeatherCard(title: \"Gust\", subtitle:  weatherData!.wind!.gust!.toInt()),\r\n-                WeatherCard(title: \"Pressure\", subtitle:  weatherData!.main!.pressure!.toInt()),\r\n-              ],\r\n-            )\r\n-\r\n-          ],\r\n-        ),\r\n+              WeatherCard(\r\n+                  title: \"Sunset\", subtitle: weatherData!.sys!.sunset!.toInt()),\r\n+              WeatherCard(\r\n+                  title: \"See Level\",\r\n+                  subtitle: weatherData!.main!.seaLevel!.toInt()),\r\n+              WeatherCard(\r\n+                  title: \"Grand Level\",\r\n+                  subtitle: weatherData!.main!.grndLevel!.toInt()),\r\n+              WeatherCard(\r\n+                  title: \"Humidity\",\r\n+                  subtitle: weatherData!.main!.humidity!.toInt()),\r\n+              WeatherCard(\r\n+                  title: \"Gust\", subtitle: weatherData!.wind!.gust!.toInt()),\r\n+              WeatherCard(\r\n+                  title: \"Pressure\",\r\n+                  subtitle: weatherData!.main!.pressure!.toInt()),\r\n+            ],\r\n+          )\r\n+        ],\r\n+      ),\r\n     );\r\n   }\r\n }\r\n-\r\n-\r\n-\r\n"
                },
                {
                    "date": 1636480631289,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -3,23 +3,24 @@\n import 'package:testing/controller/weather_controller.dart';\r\n import 'package:testing/model/weather_model.dart';\r\n import 'package:testing/widget/card_widget.dart';\r\n import 'package:velocity_x/velocity_x.dart';\r\n+import 'package:intl/intl.dart';\r\n \r\n class WeatherDetailScreen extends GetView<WeatherController> {\r\n   const WeatherDetailScreen({Key? key, this.weatherData}) : super(key: key);\r\n-  final Weather? weatherData;\r\n+  final WeatherModel? weatherData;\r\n   @override\r\n   Widget build(BuildContext context) {\r\n     return Scaffold(\r\n       appBar: AppBar(\r\n-        title: \"Weather Detail\".text.black.make(),\r\n+        title: \"Weather Detail\".text.headline2(context).make(),\r\n         centerTitle: true,\r\n       ),\r\n       body: Column(\r\n         children: [\r\n           GridView(\r\n-            padding: EdgeInsets.symmetric(horizontal: 15, vertical: 20),\r\n+            padding: const EdgeInsets.symmetric(horizontal: 15, vertical: 20),\r\n             shrinkWrap: true,\r\n             gridDelegate: const SliverGridDelegateWithFixedCrossAxisCount(\r\n               crossAxisCount: 3,\r\n               mainAxisSpacing: 15,\r\n@@ -28,29 +29,48 @@\n             ),\r\n             children: [\r\n               WeatherCard(\r\n                 title: \"Sunrise\",\r\n-                subtitle: weatherData!.sys!.sunrise!.toInt(),\r\n+                subtitle:\r\n+                    timeConversion(weatherData?.sys?.sunrise?.toInt() ?? 0),\r\n               ),\r\n               WeatherCard(\r\n-                  title: \"Sunset\", subtitle: weatherData!.sys!.sunset!.toInt()),\r\n+                title: \"Sunset\",\r\n+                subtitle:\r\n+                    timeConversion(weatherData?.sys?.sunset?.toInt() ?? 0),\r\n+              ),\r\n               WeatherCard(\r\n-                  title: \"See Level\",\r\n-                  subtitle: weatherData!.main!.seaLevel!.toInt()),\r\n+                title: \"See Level\",\r\n+                subtitle: (weatherData?.main?.seaLevel ?? 0),\r\n+              ),\r\n               WeatherCard(\r\n-                  title: \"Grand Level\",\r\n-                  subtitle: weatherData!.main!.grndLevel!.toInt()),\r\n+                title: \"Grand Level\",\r\n+                subtitle: (weatherData?.main?.grndLevel ?? 0),\r\n+              ),\r\n               WeatherCard(\r\n                   title: \"Humidity\",\r\n-                  subtitle: weatherData!.main!.humidity!.toInt()),\r\n+                  subtitle:\r\n+                      (weatherData?.main?.humidity ?? 0).toString() + \"%\"),\r\n               WeatherCard(\r\n-                  title: \"Gust\", subtitle: weatherData!.wind!.gust!.toInt()),\r\n+                title: \"Gust\",\r\n+                subtitle: (weatherData?.wind?.gust ?? 0).toInt(),\r\n+              ),\r\n               WeatherCard(\r\n                   title: \"Pressure\",\r\n-                  subtitle: weatherData!.main!.pressure!.toInt()),\r\n+                  subtitle:\r\n+                      (weatherData?.main?.pressure ?? 0).toString() + 'hPa')\r\n             ],\r\n           )\r\n         ],\r\n       ),\r\n     );\r\n   }\r\n }\r\n+\r\n+timeConversion(int value) {\r\n+  //timestamp covert to date time\r\n+\r\n+  var timeStamp =\r\n+      DateTime.fromMicrosecondsSinceEpoch(value * 1000, isUtc: true);\r\n+  var time = DateFormat('hh:mm a').format(timeStamp);\r\n+  return time;\r\n+}\r\n"
                },
                {
                    "date": 1636480920684,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -66,11 +66,11 @@\n   }\r\n }\r\n \r\n timeConversion(int value) {\r\n-  //timestamp covert to date time\r\n-\r\n+  //timestamp covert to date time 10:34 PM\r\n+  var date = DateTime.fromMillisecondsSinceEpoch(value * 1000);\r\n   var timeStamp =\r\n       DateTime.fromMicrosecondsSinceEpoch(value * 1000, isUtc: true);\r\n-  var time = DateFormat('hh:mm a').format(timeStamp);\r\n+  var time = DateFormat('hh:mm a').format(date);\r\n   return time;\r\n }\r\n"
                },
                {
                    "date": 1636481049240,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -67,10 +67,9 @@\n }\r\n \r\n timeConversion(int value) {\r\n   //timestamp covert to date time 10:34 PM\r\n-  var date = DateTime.fromMillisecondsSinceEpoch(value * 1000);\r\n-  var timeStamp =\r\n-      DateTime.fromMicrosecondsSinceEpoch(value * 1000, isUtc: true);\r\n+  var date = DateTime.fromMillisecondsSinceEpoch(value * 1000, isUtc: true);\r\n+\r\n   var time = DateFormat('hh:mm a').format(date);\r\n   return time;\r\n }\r\n"
                },
                {
                    "date": 1636481315723,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -67,9 +67,10 @@\n }\r\n \r\n timeConversion(int value) {\r\n   //timestamp covert to date time 10:34 PM\r\n-  var date = DateTime.fromMillisecondsSinceEpoch(value * 1000, isUtc: true);\r\n+  var date =\r\n+      DateTime.fromMillisecondsSinceEpoch(value * 1000, isUtc: true).toLocal();\r\n \r\n   var time = DateFormat('hh:mm a').format(date);\r\n   return time;\r\n }\r\n"
                },
                {
                    "date": 1636481373203,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -66,9 +66,9 @@\n   }\r\n }\r\n \r\n timeConversion(int value) {\r\n-  //timestamp covert to date time 10:34 PM\r\n+  //timestamp covert to date time\r\n   var date =\r\n       DateTime.fromMillisecondsSinceEpoch(value * 1000, isUtc: true).toLocal();\r\n \r\n   var time = DateFormat('hh:mm a').format(date);\r\n"
                },
                {
                    "date": 1636481472506,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -67,10 +67,9 @@\n }\r\n \r\n timeConversion(int value) {\r\n   //timestamp covert to date time\r\n-  var date =\r\n-      DateTime.fromMillisecondsSinceEpoch(value * 1000, isUtc: true).toLocal();\r\n+  var date = DateTime.fromMillisecondsSinceEpoch(value * 1000, isUtc: true);\r\n \r\n   var time = DateFormat('hh:mm a').format(date);\r\n   return time;\r\n }\r\n"
                },
                {
                    "date": 1636481617315,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -63,13 +63,21 @@\n         ],\r\n       ),\r\n     );\r\n   }\r\n+\r\n+  timeConversion(int value) {\r\n+    //timestamp covert to date time\r\n+    var date = DateTime.fromMillisecondsSinceEpoch(value * 1000, isUtc: true);\r\n+\r\n+    var time = DateFormat('hh:mm a').format(date);\r\n+    return time;\r\n+  }\r\n }\r\n \r\n-timeConversion(int value) {\r\n-  //timestamp covert to date time\r\n-  var date = DateTime.fromMillisecondsSinceEpoch(value * 1000, isUtc: true);\r\n+// timeConversion(int value) {\r\n+//   //timestamp covert to date time\r\n+//   var date = DateTime.fromMillisecondsSinceEpoch(value * 1000, isUtc: true);\r\n \r\n-  var time = DateFormat('hh:mm a').format(date);\r\n-  return time;\r\n-}\r\n+//   var time = DateFormat('hh:mm a').format(date);\r\n+//   return time;\r\n+// }\r\n"
                },
                {
                    "date": 1636481854269,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -63,21 +63,13 @@\n         ],\r\n       ),\r\n     );\r\n   }\r\n+}\r\n \r\n-  timeConversion(int value) {\r\n-    //timestamp covert to date time\r\n-    var date = DateTime.fromMillisecondsSinceEpoch(value * 1000, isUtc: true);\r\n+timeConversion(int value) {\r\n+  //timestamp covert to date time\r\n+  var date = DateTime.fromMillisecondsSinceEpoch(value * 1000, isUtc: true);\r\n \r\n-    var time = DateFormat('hh:mm a').format(date);\r\n-    return time;\r\n-  }\r\n+  var time = DateFormat('hh:mm a').format(date);\r\n+  return time;\r\n }\r\n-\r\n-// timeConversion(int value) {\r\n-//   //timestamp covert to date time\r\n-//   var date = DateTime.fromMillisecondsSinceEpoch(value * 1000, isUtc: true);\r\n-\r\n-//   var time = DateFormat('hh:mm a').format(date);\r\n-//   return time;\r\n-// }\r\n"
                },
                {
                    "date": 1636502029662,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -16,55 +16,53 @@\n         title: \"Weather Detail\".text.headline2(context).make(),\r\n         centerTitle: true,\r\n       ),\r\n       body: Column(\r\n-        children: [\r\n-          GridView(\r\n-            padding: const EdgeInsets.symmetric(horizontal: 15, vertical: 20),\r\n-            shrinkWrap: true,\r\n-            gridDelegate: const SliverGridDelegateWithFixedCrossAxisCount(\r\n-              crossAxisCount: 3,\r\n-              mainAxisSpacing: 15,\r\n-              crossAxisSpacing: 15,\r\n-              mainAxisExtent: 140.0,\r\n-            ),\r\n-            children: [\r\n-              WeatherCard(\r\n-                title: \"Sunrise\",\r\n-                subtitle:\r\n-                    timeConversion(weatherData?.sys?.sunrise?.toInt() ?? 0),\r\n-              ),\r\n-              WeatherCard(\r\n-                title: \"Sunset\",\r\n-                subtitle:\r\n-                    timeConversion(weatherData?.sys?.sunset?.toInt() ?? 0),\r\n-              ),\r\n-              WeatherCard(\r\n-                title: \"See Level\",\r\n-                subtitle: (weatherData?.main?.seaLevel ?? 0),\r\n-              ),\r\n-              WeatherCard(\r\n-                title: \"Grand Level\",\r\n-                subtitle: (weatherData?.main?.grndLevel ?? 0),\r\n-              ),\r\n-              WeatherCard(\r\n-                  title: \"Humidity\",\r\n-                  subtitle:\r\n-                      (weatherData?.main?.humidity ?? 0).toString() + \"%\"),\r\n-              WeatherCard(\r\n-                title: \"Gust\",\r\n-                subtitle: (weatherData?.wind?.gust ?? 0).toInt(),\r\n-              ),\r\n-              WeatherCard(\r\n-                  title: \"Pressure\",\r\n-                  subtitle:\r\n-                      (weatherData?.main?.pressure ?? 0).toString() + 'hPa')\r\n-            ],\r\n-          )\r\n-        ],\r\n+        children: [_dataGridView()],\r\n       ),\r\n     );\r\n   }\r\n+\r\n+  GridView _dataGridView() {\r\n+    return GridView(\r\n+      padding: const EdgeInsets.symmetric(horizontal: 15, vertical: 20),\r\n+      shrinkWrap: true,\r\n+      gridDelegate: const SliverGridDelegateWithFixedCrossAxisCount(\r\n+        crossAxisCount: 3,\r\n+        mainAxisSpacing: 15,\r\n+        crossAxisSpacing: 15,\r\n+        mainAxisExtent: 140.0,\r\n+      ),\r\n+      children: [\r\n+        WeatherCard(\r\n+          title: \"Sunrise\",\r\n+          subtitle: timeConversion(weatherData?.sys?.sunrise?.toInt() ?? 0),\r\n+        ),\r\n+        WeatherCard(\r\n+          title: \"Sunset\",\r\n+          subtitle: timeConversion(weatherData?.sys?.sunset?.toInt() ?? 0),\r\n+        ),\r\n+        WeatherCard(\r\n+          title: \"See Level\",\r\n+          subtitle: (weatherData?.main?.seaLevel ?? 0),\r\n+        ),\r\n+        WeatherCard(\r\n+          title: \"Grand Level\",\r\n+          subtitle: (weatherData?.main?.grndLevel ?? 0),\r\n+        ),\r\n+        WeatherCard(\r\n+            title: \"Humidity\",\r\n+            subtitle: (weatherData?.main?.humidity ?? 0).toString() + \"%\"),\r\n+        WeatherCard(\r\n+          title: \"Gust\",\r\n+          subtitle: (weatherData?.wind?.gust ?? 0).toInt(),\r\n+        ),\r\n+        WeatherCard(\r\n+            title: \"Pressure\",\r\n+            subtitle: (weatherData?.main?.pressure ?? 0).toString() + 'hPa')\r\n+      ],\r\n+    );\r\n+  }\r\n }\r\n \r\n timeConversion(int value) {\r\n   //timestamp covert to date time\r\n"
                }
            ],
            "date": 1636414149383,
            "name": "Commit-0",
            "content": "import 'package:flutter/material.dart';\r\nimport 'package:get/get.dart';\r\nimport 'package:testing/controller/weather_controller.dart';\r\nimport 'package:testing/model/weather_model.dart';\r\nimport 'package:testing/widget/card_widget.dart';\r\nimport 'package:velocity_x/velocity_x.dart';\r\n\r\nclass WeatherDetailScreen extends GetView<WeatherController>{\r\n\r\n  const WeatherDetailScreen({Key? key,this.weatherData}) : super(key: key);\r\n  final WeatherCountryModel? weatherData;\r\n  @override\r\n  Widget build(BuildContext context) {\r\n    return Scaffold(\r\n      appBar: AppBar(title: \"Weather Detail\".text.black.make(),centerTitle: true,),\r\n      body:  Column(\r\n          children: [\r\n\r\n            GridView(\r\n              padding: EdgeInsets.symmetric(horizontal: 15,vertical: 20),\r\n              shrinkWrap: true,\r\n              gridDelegate: const SliverGridDelegateWithFixedCrossAxisCount(\r\n                crossAxisCount: 3,\r\n                mainAxisSpacing: 15,\r\n                crossAxisSpacing: 15,\r\n                mainAxisExtent: 140.0,\r\n              ),\r\n              children: [\r\n                WeatherCard(title: \"Sunrise\", subtitle: weatherData!.sys!.sunrise!.toInt(),),\r\n                WeatherCard(title: \"Sunset\", subtitle:  weatherData!.sys!.sunset!.toInt()),\r\n                WeatherCard(title: \"See Level\", subtitle:  weatherData!.main!.seaLevel!.toInt()),\r\n                WeatherCard(title: \"Grand Level\", subtitle:  weatherData!.main!.grndLevel!.toInt()),\r\n                WeatherCard(title: \"Humidity\", subtitle:  weatherData!.main!.humidity!.toInt()),\r\n                WeatherCard(title: \"Gust\", subtitle:  weatherData!.wind!.gust!.toInt()),\r\n                WeatherCard(title: \"Pressure\", subtitle:  weatherData!.main!.pressure!.toInt()),\r\n              ],\r\n            )\r\n\r\n          ],\r\n        ),\r\n    );\r\n  }\r\n}\r\n\r\n\r\n\r\n"
        }
    ]
}