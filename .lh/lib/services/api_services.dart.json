{
    "sourceFile": "lib/services/api_services.dart",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 13,
            "patches": [
                {
                    "date": 1636421155922,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1636422458744,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,5 +1,7 @@\n+import 'package:geolocator/geolocator.dart';\r\n import 'package:http/http.dart' as http;\r\n+import 'package:testing/services/location_services.dart';\r\n \r\n class ApiServices {\r\n   static const String _baseUrl =\r\n       'https://api.openweathermap.org/data/2.5/weather?';\r\n@@ -10,5 +12,14 @@\n         .get(Uri.parse('$_baseUrl&q=$city&appid=$apiKey&units=metric'));\r\n \r\n     return response.body;\r\n   }\r\n+\r\n+  Future getLocationWeather() async {\r\n+    Position position = await getUserLocation();\r\n+\r\n+    http.Response response = await http.get(Uri.parse(\r\n+        '$_baseUrl&lat=${location.latitude}&lon=${location.longitude}&appid=$apiKey&units=metric'));\r\n+\r\n+    return response.body;\r\n+  }\r\n }\r\n"
                },
                {
                    "date": 1636422499095,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -17,9 +17,9 @@\n   Future getLocationWeather() async {\r\n     Position position = await getUserLocation();\r\n \r\n     http.Response response = await http.get(Uri.parse(\r\n-        '$_baseUrl&lat=${location.latitude}&lon=${location.longitude}&appid=$apiKey&units=metric'));\r\n+        '$_baseUrl&lat=${position.latitude}&lon=${position.longitude}&appid=$apiKey&units=metric'));\r\n \r\n     return response.body;\r\n   }\r\n }\r\n"
                },
                {
                    "date": 1636427367861,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,25 +1,30 @@\n import 'package:geolocator/geolocator.dart';\r\n import 'package:http/http.dart' as http;\r\n+import 'package:testing/constant/constant.dart';\r\n import 'package:testing/services/location_services.dart';\r\n \r\n class ApiServices {\r\n   static const String _baseUrl =\r\n       'https://api.openweathermap.org/data/2.5/weather?';\r\n   static String apiKey = '5a6241e32f2899514aedb390ee30718a';\r\n \r\n   Future<dynamic> getCityWeather(String city) async {\r\n-    http.Response response = await http\r\n-        .get(Uri.parse('$_baseUrl&q=$city&appid=$apiKey&units=metric'));\r\n+    try {\r\n+      http.Response response = await http\r\n+          .get(Uri.parse('$_baseUrl&q=$city&appid=$apiKey&units=metric'));\r\n \r\n-    return response.body;\r\n+      return response.body;\r\n+    } on Exception catch (e) {}\r\n   }\r\n \r\n   Future getLocationWeather() async {\r\n-    Position position = await getUserLocation();\r\n+    try {\r\n+      Position position = await getUserLocation();\r\n \r\n-    http.Response response = await http.get(Uri.parse(\r\n-        '$_baseUrl&lat=${position.latitude}&lon=${position.longitude}&appid=$apiKey&units=metric'));\r\n-\r\n-    return response.body;\r\n+      http.Response response = await http.get(Uri.parse(\r\n+          '$_baseUrl&lat=${position.latitude}&lon=${position.longitude}&appid=$apiKey&units=metric'));\r\n+    } catch (e) {\r\n+      showErrorSnackbar(e.toString());\r\n+    }\r\n   }\r\n }\r\n"
                },
                {
                    "date": 1636427408243,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -13,9 +13,11 @@\n       http.Response response = await http\r\n           .get(Uri.parse('$_baseUrl&q=$city&appid=$apiKey&units=metric'));\r\n \r\n       return response.body;\r\n-    } on Exception catch (e) {}\r\n+    } catch (e) {\r\n+      showErrorSnackbar(e.toString());\r\n+    }\r\n   }\r\n \r\n   Future getLocationWeather() async {\r\n     try {\r\n"
                },
                {
                    "date": 1636427987705,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,20 +1,24 @@\n import 'package:geolocator/geolocator.dart';\r\n import 'package:http/http.dart' as http;\r\n import 'package:testing/constant/constant.dart';\r\n+import 'package:testing/model/weather_model.dart';\r\n import 'package:testing/services/location_services.dart';\r\n \r\n class ApiServices {\r\n   static const String _baseUrl =\r\n       'https://api.openweathermap.org/data/2.5/weather?';\r\n   static String apiKey = '5a6241e32f2899514aedb390ee30718a';\r\n \r\n-  Future<dynamic> getCityWeather(String city) async {\r\n+  Future<WeatherCountryModel> getCityWeather(String city) async {\r\n     try {\r\n       http.Response response = await http\r\n           .get(Uri.parse('$_baseUrl&q=$city&appid=$apiKey&units=metric'));\r\n-\r\n-      return response.body;\r\n+      if (response.statusCode == 200) {\r\n+        return Future.value(weatherModelFromJson(response.body));\r\n+      } else {\r\n+        throw Exception('Failed to load weather data');\r\n+      }\r\n     } catch (e) {\r\n       showErrorSnackbar(e.toString());\r\n     }\r\n   }\r\n"
                },
                {
                    "date": 1636428052453,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -15,9 +15,9 @@\n           .get(Uri.parse('$_baseUrl&q=$city&appid=$apiKey&units=metric'));\r\n       if (response.statusCode == 200) {\r\n         return Future.value(weatherModelFromJson(response.body));\r\n       } else {\r\n-        throw Exception('Failed to load weather data');\r\n+        return Future.error('Failed to load weather data');\r\n       }\r\n     } catch (e) {\r\n       showErrorSnackbar(e.toString());\r\n     }\r\n"
                },
                {
                    "date": 1636428131159,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -9,18 +9,14 @@\n       'https://api.openweathermap.org/data/2.5/weather?';\r\n   static String apiKey = '5a6241e32f2899514aedb390ee30718a';\r\n \r\n   Future<WeatherCountryModel> getCityWeather(String city) async {\r\n-    try {\r\n-      http.Response response = await http\r\n-          .get(Uri.parse('$_baseUrl&q=$city&appid=$apiKey&units=metric'));\r\n-      if (response.statusCode == 200) {\r\n-        return Future.value(weatherModelFromJson(response.body));\r\n-      } else {\r\n-        return Future.error('Failed to load weather data');\r\n-      }\r\n-    } catch (e) {\r\n-      showErrorSnackbar(e.toString());\r\n+    http.Response response = await http\r\n+        .get(Uri.parse('$_baseUrl&q=$city&appid=$apiKey&units=metric'));\r\n+    if (response.statusCode == 200) {\r\n+      return Future.value(weatherModelFromJson(response.body));\r\n+    } else {\r\n+      return throw Exception('Failed to load weather data');\r\n     }\r\n   }\r\n \r\n   Future getLocationWeather() async {\r\n"
                },
                {
                    "date": 1636430290594,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -8,25 +8,34 @@\n   static const String _baseUrl =\r\n       'https://api.openweathermap.org/data/2.5/weather?';\r\n   static String apiKey = '5a6241e32f2899514aedb390ee30718a';\r\n \r\n-  Future<WeatherCountryModel> getCityWeather(String city) async {\r\n-    http.Response response = await http\r\n-        .get(Uri.parse('$_baseUrl&q=$city&appid=$apiKey&units=metric'));\r\n-    if (response.statusCode == 200) {\r\n-      return Future.value(weatherModelFromJson(response.body));\r\n-    } else {\r\n-      return throw Exception('Failed to load weather data');\r\n+  Future<Weather> getCityWeather(String city) async {\r\n+    try {\r\n+      http.Response response = await http\r\n+          .get(Uri.parse('$_baseUrl&q=$city&appid=$apiKey&units=metric'));\r\n+      if (response.statusCode == 200) {\r\n+        return Future.value(weatherFromJson(response.body));\r\n+      } else {\r\n+        return throw Exception('Failed to load weather data');\r\n+      }\r\n+    } on Exception catch (e) {\r\n+      throw Exception(e.toString());\r\n     }\r\n   }\r\n \r\n-  Future getLocationWeather() async {\r\n+  Future<Weather> getLocationWeather() async {\r\n     try {\r\n       Position position = await getUserLocation();\r\n \r\n       http.Response response = await http.get(Uri.parse(\r\n           '$_baseUrl&lat=${position.latitude}&lon=${position.longitude}&appid=$apiKey&units=metric'));\r\n+      if (response.statusCode == 200) {\r\n+        return Future.value(weatherFromJson(response.body));\r\n+      } else {\r\n+        return throw Exception('Failed to load weather data');\r\n+      }\r\n     } catch (e) {\r\n-      showErrorSnackbar(e.toString());\r\n+      throw Exception('Failed to load weather data');\r\n     }\r\n   }\r\n }\r\n"
                },
                {
                    "date": 1636430450121,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -18,8 +18,9 @@\n       } else {\r\n         return throw Exception('Failed to load weather data');\r\n       }\r\n     } on Exception catch (e) {\r\n+      showErrorSnackbar(e.toString());\r\n       throw Exception(e.toString());\r\n     }\r\n   }\r\n \r\n@@ -34,8 +35,9 @@\n       } else {\r\n         return throw Exception('Failed to load weather data');\r\n       }\r\n     } catch (e) {\r\n-      throw Exception('Failed to load weather data');\r\n+      showErrorSnackbar(e.toString());\r\n+      throw Exception(e.toString());\r\n     }\r\n   }\r\n }\r\n"
                },
                {
                    "date": 1636430463227,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -17,9 +17,9 @@\n         return Future.value(weatherFromJson(response.body));\r\n       } else {\r\n         return throw Exception('Failed to load weather data');\r\n       }\r\n-    } on Exception catch (e) {\r\n+    } catch (e) {\r\n       showErrorSnackbar(e.toString());\r\n       throw Exception(e.toString());\r\n     }\r\n   }\r\n"
                },
                {
                    "date": 1636431433413,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -3,15 +3,21 @@\n import 'package:testing/constant/constant.dart';\r\n import 'package:testing/model/weather_model.dart';\r\n import 'package:testing/services/location_services.dart';\r\n \r\n+import '../constant/constant.dart';\r\n+\r\n class ApiServices {\r\n   static const String _baseUrl =\r\n       'https://api.openweathermap.org/data/2.5/weather?';\r\n   static String apiKey = '5a6241e32f2899514aedb390ee30718a';\r\n \r\n   Future<Weather> getCityWeather(String city) async {\r\n     try {\r\n+       bool _result = await InternetConnectionChecker().hasConnection;\r\n+ if (!result) {\r\n+      return showErrorSnackbar('Can't connect to internet');\r\n+    }\r\n       http.Response response = await http\r\n           .get(Uri.parse('$_baseUrl&q=$city&appid=$apiKey&units=metric'));\r\n       if (response.statusCode == 200) {\r\n         return Future.value(weatherFromJson(response.body));\r\n"
                },
                {
                    "date": 1636431485249,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -10,9 +10,9 @@\n   static const String _baseUrl =\r\n       'https://api.openweathermap.org/data/2.5/weather?';\r\n   static String apiKey = '5a6241e32f2899514aedb390ee30718a';\r\n \r\n-  Future<Weather> getCityWeather(String city) async {\r\n+  Future getCityWeather(String city) async {\r\n     try {\r\n        bool _result = await InternetConnectionChecker().hasConnection;\r\n  if (!result) {\r\n       return showErrorSnackbar('Can't connect to internet');\r\n"
                },
                {
                    "date": 1636478709046,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -10,21 +10,25 @@\n import '../constant/constant.dart';\r\n import 'package:internet_connection_checker/internet_connection_checker.dart';\r\n \r\n class ApiServices {\r\n-  static const Duration timeout = Duration(seconds: 20);\r\n+  static const Duration timelimit = Duration(seconds: 20);\r\n   static const String _baseUrl =\r\n-      'https://api.openweathermap.org/data/2.5/weather?';\r\n-  static String apiKey = '25651f476b195031e666fc17a707deb9';\r\n+      'https://api.openweathermap.org/data/2.5/weather';\r\n+  static String apiKey = '5a6241e32f2899514aedb390ee30718a';\r\n \r\n-  Future getCityWeather(String city) async {\r\n+  Future<Weather> getCityWeather(String city) async {\r\n     try {\r\n       bool _connection = await InternetConnectionChecker().hasConnection;\r\n \r\n       if (!_connection) {\r\n-        return showErrorSnackBar('No Internet ');\r\n+        return showErrorSnackbar(\"Can't connect to internet\");\r\n       }\r\n-      http.Response response = await http.get(Uri.parse('${_baseUrl}q=$city&appid=$apiKey&units=metric'));\r\n+\r\n+      http.Response response = await http\r\n+          .get(Uri.parse('$_baseUrl?q=$city&appid=$apiKey&units=metric'))\r\n+          .timeout(timelimit);\r\n+\r\n       return _processResponse(response);\r\n     } on TimeoutException catch (_) {\r\n       throw Exception('Timeout');\r\n     } on SocketException catch (_) {\r\n@@ -35,27 +39,29 @@\n   }\r\n \r\n   Future getLocationWeather() async {\r\n     try {\r\n-      Position? position = await getUserLocation();\r\n+      Position position = await getUserLocation();\r\n \r\n       http.Response response = await http.get(Uri.parse(\r\n-          '$_baseUrl&lat=${position?.latitude ?? 0.0}&lon=${position?.longitude ?? 0.0}&appid=$apiKey&units=metric'));\r\n-      return _processResponse(response);\r\n-    } on TimeoutException catch (_) {\r\n-      throw Exception('Timeout');\r\n-    } on SocketException catch (_) {\r\n-      throw Exception('No Internet');\r\n+          '$_baseUrl&lat=${position.latitude}&lon=${position.longitude}&appid=$apiKey&units=metric'));\r\n+      if (response.statusCode == 200) {\r\n+        return Future.value(weatherFromJson(response.body));\r\n+      } else {\r\n+        return throw Exception('Failed to load weather data');\r\n+      }\r\n+    } on TimeoutException {\r\n     } catch (e) {\r\n+      showErrorSnackbar(e.toString());\r\n       throw Exception(e.toString());\r\n     }\r\n   }\r\n }\r\n \r\n-WeatherModel _processResponse(http.Response response) {\r\n+Weather _processResponse(http.Response response) {\r\n   switch (response.statusCode) {\r\n     case 200:\r\n-      WeatherModel responseJson = weatherFromJson(response.body);\r\n+      Weather responseJson = weatherFromJson(response.body);\r\n       return responseJson;\r\n \r\n     case 404:\r\n       throw Exception('City not found');\r\n"
                }
            ],
            "date": 1636421155922,
            "name": "Commit-0",
            "content": "import 'package:http/http.dart' as http;\r\n\r\nclass ApiServices {\r\n  static const String _baseUrl =\r\n      'https://api.openweathermap.org/data/2.5/weather?';\r\n  static String apiKey = '5a6241e32f2899514aedb390ee30718a';\r\n\r\n  Future<dynamic> getCityWeather(String city) async {\r\n    http.Response response = await http\r\n        .get(Uri.parse('$_baseUrl&q=$city&appid=$apiKey&units=metric'));\r\n\r\n    return response.body;\r\n  }\r\n}\r\n"
        }
    ]
}