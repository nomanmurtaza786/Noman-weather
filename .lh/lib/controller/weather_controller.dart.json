{
    "sourceFile": "lib/controller/weather_controller.dart",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 21,
            "patches": [
                {
                    "date": 1636423152396,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1636423245926,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -31,9 +31,8 @@\n         return change(storeData, status: RxStatus.success());\r\n       } else {\r\n         return change(storeData, status: RxStatus.error(\"Server error\"));\r\n       }\r\n-    } on SocketException {\r\n     } catch (err) {\r\n       return change(storeData!, status: RxStatus.error(err.toString()));\r\n     }\r\n   }\r\n"
                },
                {
                    "date": 1636519339177,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,39 +1,40 @@\n import 'dart:async';\r\n-import 'package:flutter/material.dart';\r\n+import 'package:flutter/cupertino.dart';\r\n import 'package:get/get.dart';\r\n-import 'package:geolocator/geolocator.dart';\r\n-import 'package:testing/constant/temperature_constant.dart';\r\n+import 'package:testing/constant/constant.dart';\r\n import 'package:testing/model/weather_model.dart';\r\n-import 'package:testing/permission/location_permission.dart';\r\n-import 'dart:io';\r\n-import 'package:http/http.dart' as http;\r\n-import 'package:testing/services/internet_service.dart';\r\n+import 'package:testing/services/api_services.dart';\r\n \r\n-String weatherUrl = \"\";\r\n+class WeatherController extends GetxController with StateMixin<WeatherModel> {\r\n+  String? weatherIcon;\r\n+  final ApiServices _apiServices = ApiServices();\r\n+  WeatherModel? storeData;\r\n+  TextEditingController searchText = TextEditingController();\r\n \r\n-class WeatherController extends GetxController\r\n-    with StateMixin<WeatherCountryModel> {\r\n-  WeatherCountryModel? storeData = WeatherCountryModel();\r\n+  var text = \"\".obs;\r\n \r\n-  String? weatherIcon;\r\n+  @override\r\n+  void onInit() {\r\n+    super.onInit();\r\n+    getLocationWeather();\r\n+  }\r\n \r\n-  Future online() async {\r\n-    var response = await http.Client().get(Uri.parse(\r\n-        \"https://api.openweathermap.org/data/2.5/weather?lat=$latitude&lon=$longitude&appid=25651f476b195031e666fc17a707deb9&units=metric\"));\r\n+  Future getLocationWeather() async {\r\n     try {\r\n-      if (response.statusCode == 200) {\r\n-        storeData = weatherModelFromJson(response.body);\r\n-        print(response.body);\r\n-        if (storeData!.weather!.isEmpty) {\r\n-          return change(storeData, status: RxStatus.empty());\r\n-        }\r\n-        weatherIcon = getWeatherIcon(storeData!.weather![0].id!);\r\n-        return change(storeData, status: RxStatus.success());\r\n-      } else {\r\n-        return change(storeData, status: RxStatus.error(\"Server error\"));\r\n-      }\r\n-    } catch (err) {\r\n-      return change(storeData!, status: RxStatus.error(err.toString()));\r\n+      storeData = await _apiServices.getLocationWeather();\r\n+      return change(storeData, status: RxStatus.success());\r\n+    } catch (e) {\r\n+      showErrorSnackBar(e.toString());\r\n+      change(storeData, status: RxStatus.success());\r\n     }\r\n   }\r\n+\r\n+  Future getCityData() async {\r\n+    try {\r\n+      storeData = await _apiServices.getCityWeather(text.value.toString());\r\n+      return change(storeData, status: RxStatus.success());\r\n+    } on Exception catch (e) {\r\n+      showErrorSnackBar(e.toString());\r\n+    }\r\n+  }\r\n }\r\n"
                },
                {
                    "date": 1636519352721,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -24,9 +24,9 @@\n       storeData = await _apiServices.getLocationWeather();\r\n       return change(storeData, status: RxStatus.success());\r\n     } catch (e) {\r\n       showErrorSnackBar(e.toString());\r\n-      change(storeData, status: RxStatus.success());\r\n+      change(null, status: RxStatus.success());\r\n     }\r\n   }\r\n \r\n   Future getCityData() async {\r\n"
                },
                {
                    "date": 1636519381607,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -24,9 +24,9 @@\n       storeData = await _apiServices.getLocationWeather();\r\n       return change(storeData, status: RxStatus.success());\r\n     } catch (e) {\r\n       showErrorSnackBar(e.toString());\r\n-      change(null, status: RxStatus.success());\r\n+      change(null, status: RxStatus.error());\r\n     }\r\n   }\r\n \r\n   Future getCityData() async {\r\n"
                },
                {
                    "date": 1636519764472,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,5 +1,6 @@\n import 'dart:async';\r\n+import 'dart:io';\r\n import 'package:flutter/cupertino.dart';\r\n import 'package:get/get.dart';\r\n import 'package:testing/constant/constant.dart';\r\n import 'package:testing/model/weather_model.dart';\r\n@@ -22,11 +23,12 @@\n   Future getLocationWeather() async {\r\n     try {\r\n       storeData = await _apiServices.getLocationWeather();\r\n       return change(storeData, status: RxStatus.success());\r\n+    } on SocketException catch (err) {\r\n+      return change(null, status: RxStatus.error(err.toString()));\r\n     } catch (e) {\r\n       showErrorSnackBar(e.toString());\r\n-      change(null, status: RxStatus.error());\r\n     }\r\n   }\r\n \r\n   Future getCityData() async {\r\n"
                },
                {
                    "date": 1636520152442,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -25,8 +25,10 @@\n       storeData = await _apiServices.getLocationWeather();\r\n       return change(storeData, status: RxStatus.success());\r\n     } on SocketException catch (err) {\r\n       return change(null, status: RxStatus.error(err.toString()));\r\n+    } on TimeoutException catch (err) {\r\n+      return change(null, status: RxStatus.error(err.toString()));\r\n     } catch (e) {\r\n       showErrorSnackBar(e.toString());\r\n     }\r\n   }\r\n"
                },
                {
                    "date": 1636520271571,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -36,9 +36,13 @@\n   Future getCityData() async {\r\n     try {\r\n       storeData = await _apiServices.getCityWeather(text.value.toString());\r\n       return change(storeData, status: RxStatus.success());\r\n-    } on Exception catch (e) {\r\n+    } on SocketException catch (err) {\r\n+      return change(null, status: RxStatus.error(err.toString()));\r\n+    } on TimeoutException catch (err) {\r\n+      return change(null, status: RxStatus.error(err.toString()));\r\n+    } catch (e) {\r\n       showErrorSnackBar(e.toString());\r\n     }\r\n   }\r\n }\r\n"
                },
                {
                    "date": 1636546230948,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -22,9 +22,9 @@\n \r\n   Future getLocationWeather() async {\r\n     try {\r\n       storeData = await _apiServices.getLocationWeather();\r\n-      return change(storeData, status: RxStatus.success());\r\n+      return change(storeData, status: RxStatus.loadingMore());\r\n     } on SocketException catch (err) {\r\n       return change(null, status: RxStatus.error(err.toString()));\r\n     } on TimeoutException catch (err) {\r\n       return change(null, status: RxStatus.error(err.toString()));\r\n"
                },
                {
                    "date": 1636546297875,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -22,11 +22,11 @@\n \r\n   Future getLocationWeather() async {\r\n     try {\r\n       storeData = await _apiServices.getLocationWeather();\r\n-      return change(storeData, status: RxStatus.loadingMore());\r\n+      return change(storeData, status: RxStatus.success());\r\n     } on SocketException catch (err) {\r\n-      return change(null, status: RxStatus.error(err.toString()));\r\n+      return change(null, status: RxStatus.loadingMore());\r\n     } on TimeoutException catch (err) {\r\n       return change(null, status: RxStatus.error(err.toString()));\r\n     } catch (e) {\r\n       showErrorSnackBar(e.toString());\r\n"
                },
                {
                    "date": 1636546556013,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -24,9 +24,9 @@\n     try {\r\n       storeData = await _apiServices.getLocationWeather();\r\n       return change(storeData, status: RxStatus.success());\r\n     } on SocketException catch (err) {\r\n-      return change(null, status: RxStatus.loadingMore());\r\n+      return change(null, status: RxStatus.error(err.toString()));\r\n     } on TimeoutException catch (err) {\r\n       return change(null, status: RxStatus.error(err.toString()));\r\n     } catch (e) {\r\n       showErrorSnackBar(e.toString());\r\n"
                },
                {
                    "date": 1636546830043,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -24,9 +24,9 @@\n     try {\r\n       storeData = await _apiServices.getLocationWeather();\r\n       return change(storeData, status: RxStatus.success());\r\n     } on SocketException catch (err) {\r\n-      return change(null, status: RxStatus.error(err.toString()));\r\n+      //return change(null, status: RxStatus.error(err.toString()));\r\n     } on TimeoutException catch (err) {\r\n       return change(null, status: RxStatus.error(err.toString()));\r\n     } catch (e) {\r\n       showErrorSnackBar(e.toString());\r\n"
                },
                {
                    "date": 1636546937205,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -24,9 +24,9 @@\n     try {\r\n       storeData = await _apiServices.getLocationWeather();\r\n       return change(storeData, status: RxStatus.success());\r\n     } on SocketException catch (err) {\r\n-      //return change(null, status: RxStatus.error(err.toString()));\r\n+      return change(null, status: RxStatus.success());\r\n     } on TimeoutException catch (err) {\r\n       return change(null, status: RxStatus.error(err.toString()));\r\n     } catch (e) {\r\n       showErrorSnackBar(e.toString());\r\n"
                },
                {
                    "date": 1636548501610,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -24,9 +24,9 @@\n     try {\r\n       storeData = await _apiServices.getLocationWeather();\r\n       return change(storeData, status: RxStatus.success());\r\n     } on SocketException catch (err) {\r\n-      return change(null, status: RxStatus.success());\r\n+      return change(null, status: RxStatus.error(err.toString()));\r\n     } on TimeoutException catch (err) {\r\n       return change(null, status: RxStatus.error(err.toString()));\r\n     } catch (e) {\r\n       showErrorSnackBar(e.toString());\r\n"
                },
                {
                    "date": 1636553322302,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -29,8 +29,9 @@\n     } on TimeoutException catch (err) {\r\n       return change(null, status: RxStatus.error(err.toString()));\r\n     } catch (e) {\r\n       showErrorSnackBar(e.toString());\r\n+      return change(null, status: RxStatus.error(e.toString()));\r\n     }\r\n   }\r\n \r\n   Future getCityData() async {\r\n"
                },
                {
                    "date": 1636553393017,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -28,9 +28,9 @@\n       return change(null, status: RxStatus.error(err.toString()));\r\n     } on TimeoutException catch (err) {\r\n       return change(null, status: RxStatus.error(err.toString()));\r\n     } catch (e) {\r\n-      showErrorSnackBar(e.toString());\r\n+      //showErrorSnackBar(e.toString());\r\n       return change(null, status: RxStatus.error(e.toString()));\r\n     }\r\n   }\r\n \r\n"
                },
                {
                    "date": 1636555283320,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -22,9 +22,9 @@\n \r\n   Future getLocationWeather() async {\r\n     try {\r\n       storeData = await _apiServices.getLocationWeather();\r\n-      return change(storeData, status: RxStatus.success());\r\n+      return change(null, status: RxStatus.success());\r\n     } on SocketException catch (err) {\r\n       return change(null, status: RxStatus.error(err.toString()));\r\n     } on TimeoutException catch (err) {\r\n       return change(null, status: RxStatus.error(err.toString()));\r\n"
                },
                {
                    "date": 1636555726609,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -24,9 +24,9 @@\n     try {\r\n       storeData = await _apiServices.getLocationWeather();\r\n       return change(null, status: RxStatus.success());\r\n     } on SocketException catch (err) {\r\n-      return change(null, status: RxStatus.error(err.toString()));\r\n+      return change(storeData, status: RxStatus.error(err.toString()));\r\n     } on TimeoutException catch (err) {\r\n       return change(null, status: RxStatus.error(err.toString()));\r\n     } catch (e) {\r\n       //showErrorSnackBar(e.toString());\r\n"
                },
                {
                    "date": 1636556725791,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -20,18 +20,18 @@\n     getLocationWeather();\r\n   }\r\n \r\n   Future getLocationWeather() async {\r\n+    change(null, status: RxStatus.loading());\r\n     try {\r\n       storeData = await _apiServices.getLocationWeather();\r\n-      return change(null, status: RxStatus.success());\r\n+      return change(storeData, status: RxStatus.success());\r\n     } on SocketException catch (err) {\r\n-      return change(storeData, status: RxStatus.error(err.toString()));\r\n+      return change(null, status: RxStatus.error(err.toString()));\r\n     } on TimeoutException catch (err) {\r\n       return change(null, status: RxStatus.error(err.toString()));\r\n     } catch (e) {\r\n-      //showErrorSnackBar(e.toString());\r\n-      return change(null, status: RxStatus.error(e.toString()));\r\n+      showErrorSnackBar(e.toString());\r\n     }\r\n   }\r\n \r\n   Future getCityData() async {\r\n"
                },
                {
                    "date": 1636556746764,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -20,9 +20,9 @@\n     getLocationWeather();\r\n   }\r\n \r\n   Future getLocationWeather() async {\r\n-    change(null, status: RxStatus.loading());\r\n+    change(null, status: RxStatus.loadingMore());\r\n     try {\r\n       storeData = await _apiServices.getLocationWeather();\r\n       return change(storeData, status: RxStatus.success());\r\n     } on SocketException catch (err) {\r\n"
                },
                {
                    "date": 1636556784109,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -20,9 +20,9 @@\n     getLocationWeather();\r\n   }\r\n \r\n   Future getLocationWeather() async {\r\n-    change(null, status: RxStatus.loadingMore());\r\n+    change(null, status: RxStatus.loading());\r\n     try {\r\n       storeData = await _apiServices.getLocationWeather();\r\n       return change(storeData, status: RxStatus.success());\r\n     } on SocketException catch (err) {\r\n"
                },
                {
                    "date": 1636556863462,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -34,8 +34,9 @@\n     }\r\n   }\r\n \r\n   Future getCityData() async {\r\n+    change(null, status: RxStatus.loading());\r\n     try {\r\n       storeData = await _apiServices.getCityWeather(text.value.toString());\r\n       return change(storeData, status: RxStatus.success());\r\n     } on SocketException catch (err) {\r\n"
                }
            ],
            "date": 1636423152396,
            "name": "Commit-0",
            "content": "import 'dart:async';\r\nimport 'package:flutter/material.dart';\r\nimport 'package:get/get.dart';\r\nimport 'package:geolocator/geolocator.dart';\r\nimport 'package:testing/constant/temperature_constant.dart';\r\nimport 'package:testing/model/weather_model.dart';\r\nimport 'package:testing/permission/location_permission.dart';\r\nimport 'dart:io';\r\nimport 'package:http/http.dart' as http;\r\nimport 'package:testing/services/internet_service.dart';\r\n\r\nString weatherUrl = \"\";\r\n\r\nclass WeatherController extends GetxController\r\n    with StateMixin<WeatherCountryModel> {\r\n  WeatherCountryModel? storeData = WeatherCountryModel();\r\n\r\n  String? weatherIcon;\r\n\r\n  Future online() async {\r\n    var response = await http.Client().get(Uri.parse(\r\n        \"https://api.openweathermap.org/data/2.5/weather?lat=$latitude&lon=$longitude&appid=25651f476b195031e666fc17a707deb9&units=metric\"));\r\n    try {\r\n      if (response.statusCode == 200) {\r\n        storeData = weatherModelFromJson(response.body);\r\n        print(response.body);\r\n        if (storeData!.weather!.isEmpty) {\r\n          return change(storeData, status: RxStatus.empty());\r\n        }\r\n        weatherIcon = getWeatherIcon(storeData!.weather![0].id!);\r\n        return change(storeData, status: RxStatus.success());\r\n      } else {\r\n        return change(storeData, status: RxStatus.error(\"Server error\"));\r\n      }\r\n    } on SocketException {\r\n    } catch (err) {\r\n      return change(storeData!, status: RxStatus.error(err.toString()));\r\n    }\r\n  }\r\n}\r\n"
        }
    ]
}